# -*- coding: utf-8 -*-
"""ann_streamlit_model

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u7Y1dGNyNx1nL5D-MpltZhPS1BMO7taO
"""
import streamlit as st
import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
import tensorflow as tf
from tensorflow.keras.models import load_model
from tensorflow.keras.losses import MeanSquaredError
from tensorflow.keras.metrics import MeanAbsoluteError

# Streamlit UI Setup
st.title('Artificial Neural Network (ANN) Model for Frequency Prediction (Plate with CCCC boundary condition)')

# Load the models for P1, P2, P3, and P4
model_p1 = tf.keras.models.load_model("ann_model_1.keras")
model_p2 = tf.keras.models.load_model("ann_model_2.keras")
model_p3 = tf.keras.models.load_model("ann_model_3.keras")
model_p4 = tf.keras.models.load_model("ann_model_4.keras")

# Load pre-trained scaler
scaler = StandardScaler()

# Prediction Interface
st.sidebar.header("Make Predictions")
length = st.sidebar.number_input("Length", min_value=0.0, value=1.0)
breath = st.sidebar.number_input("Breath", min_value=0.0, value=1.0)
diameter = st.sidebar.number_input("Diameter", min_value=0.0, value=1.0)
thickness = st.sidebar.number_input("Thickness", min_value=0.0, value=1.0)

# Function to make predictions
def make_prediction(model, scaler, input_data):
    # Scale the input data using the fitted scaler
    sample_scaled = scaler.transform([input_data])
    # Make the prediction using the model
    return model.predict(sample_scaled)[0][0]

# Make prediction based on user input
if st.sidebar.button("Predict"):
    # Prepare the input values
    input_data = np.array([length, breath, diameter, thickness])

    # Perform predictions for P1, P2, P3, and P4
    p1_prediction = make_prediction(model_p1, scaler, input_data)
    p2_prediction = make_prediction(model_p2, scaler, input_data)
    p3_prediction = make_prediction(model_p3, scaler, input_data)
    p4_prediction = make_prediction(model_p4, scaler, input_data)

    # Display the predictions
    st.write(f"### Prediction for Input Values ({length}, {breath}, {diameter}, {thickness}):")
    st.write(f"**Predicted Frequency F1**: {p1_prediction:.4f}")
    st.write(f"**Predicted Frequency F2**: {p2_prediction:.4f}")
    st.write(f"**Predicted Frequency F3**: {p3_prediction:.4f}")
    st.write(f"**Predicted Frequency F4**: {p4_prediction:.4f}")

import joblib

# Save the scaler
joblib.dump(scaler, 'scaler.pkl')